apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
  name: {{ .Values.site_name }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  selector:
    matchLabels:
      name: {{ .Values.site_name }}
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        name: {{ .Values.site_name }}
    spec:
      containers:
      - env:
        - name: DRUPAL_CIM_UPDATE
          value: 'false'
        - name: DISPLAY_ERRORS
          value: 'ON'
        - name: PHP_MEMORY_LIMIT
          value: 768M
#        envFrom:
#          - secretRef:
#            name: drupal-mysqldb
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        livenessProbe:
          {{- toYaml .Values.livenessProbe | nindent 10 }}
        readinessProbe:
          {{- toYaml .Values.readinessProbe | nindent 10 }}
        name: {{ .Values.site_name }}
        ports:
        - containerPort: {{ .Values.deployment.port }}
          protocol: TCP
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
#        volumeMounts:
#        - mountPath: /var/lib/pgsql/data
#          name: {{ .Values.database_service_name }}-data
#            - name: drupal-nfs
#              mountPath: /opt/app-root/src/private-files
#              subPath: private-files
#            - name: drupal-nfs
#              mountPath: /opt/app-root/src/web/sites/default/files
#              subPath: files
      dnsPolicy: ClusterFirst
      restartPolicy: Always
#      volumes:
#      - name: {{ .Values.database_service_name }}-data
#        persistentVolumeClaim:
#          claimName: {{ .Values.database_service_name }}
#        - name: drupal-nfs
#          persistentVolumeClaim:
#            claimName: drupal-nfs
status: {}
